# Generated by Django 4.0.10 on 2024-03-03 08:15

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionAuthUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('authentication.user',),
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=255, verbose_name='Display Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(choices=[('FREE', 'FREE'), ('PREMIUM', 'PREMIUM')], default='FREE', max_length=50, verbose_name='Subscription plan name')),
                ('is_free', models.BooleanField(default=True, verbose_name='Free account')),
                ('price_per_plan', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price per plan')),
                ('duration', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Duration (Month)')),
                ('stripe_price_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stripe Price ID')),
                ('is_publish', models.BooleanField(default=True, verbose_name='Is Publish?')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Subscription plan',
                'verbose_name_plural': 'Subscription plans',
                'db_table': 'subsciption_plan',
                'ordering': ['name', 'duration'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=255, verbose_name='Display Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('start_day', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Day')),
                ('end_day', models.DateTimeField(null=True, verbose_name='End Day')),
                ('payment_status', models.CharField(choices=[('SUCCESS', 'SUCCESS'), ('PENDING', 'PENDING'), ('CANCELED', 'CANCELED')], default='PENDING', max_length=20, verbose_name='Payment status')),
                ('subscription_type', models.CharField(choices=[('SUBSCRIPTION', 'SUBSCRIPTION'), ('RESUBSCRIPTION', 'RESUBSCRIPTION')], default='SUBSCRIPTION', max_length=50, verbose_name='Subscription Type')),
                ('status', models.CharField(choices=[('INACTIVE', 'INACTIVE'), ('ACTIVE', 'ACTIVE'), ('EXPIRED', 'EXPIRED'), ('CANCELED', 'CANCELED')], default='INACTIVE', max_length=50, verbose_name='Status')),
                ('auto_renew', models.BooleanField(default=False, verbose_name='Is auto renew?')),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='Stripe Subscription ID')),
                ('service_data', models.JSONField(blank=True, editable=False, null=True, verbose_name='Service data payload')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='histories', to='payment.subscriptionplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_histories', to='payment.subscriptionauthuser', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Subscription history',
                'verbose_name_plural': 'Subscription histories',
                'db_table': 'subscription_history',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=255, verbose_name='Display Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('stripe_invoice_id', models.CharField(max_length=255, verbose_name='Stripe Invoice Id')),
                ('type', models.CharField(choices=[('Card', 'Card')], default='Card', max_length=50, verbose_name='Invoice type name')),
                ('link_invoice_pdf', models.URLField(null=True, verbose_name='Link Invoice PDF')),
                ('hosted_invoice_url', models.URLField(null=True, verbose_name='Hosted Invoice url')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('subscription_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='payment.subscriptionhistory', verbose_name='Subscription Plan Line')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_user', to='payment.subscriptionauthuser', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Invoice',
                'db_table': 'invoice',
            },
        ),
    ]
